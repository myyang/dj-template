image: {{ cookiecutter.registry_url }}/py2.7.11-build

stages:
    - quick-test
    - test
    - post-test
    - build
    - post-build
    - deploy
    - post-deploy

variables:
    PROJECT_NAME: "{{ cookiecutter.project_name }}" 
    REGISTRY_URL: "{{ cookiecutter.registry_url }}"
    STAGING_SERVER: ""
    PRODUCTION_SERVER: ""

test-with-sqlite-and-mem:
    image: $REGISTRY_URL/python:2.7.11-alpine-build-dev
    stage: quick-test
    variables:
        DJANGO_SETTINGS_MODULE: "{{ cookiecutter.project_name }}.settings.quick_local"
    script:
        - make test-coverage

# Use docker for testing
test-with-coverage:
    stage: test
    image: $REGISTRY_URL/python:2.7.11-alpine-build-dev
    services:
        - mysql
        - memcached:alpine
    variables:
        MYSQL_ROOT_PASSWORD: "{{ cookiecutter.project_name }}_passwd"
        MYSQL_DATABASE: "{{ cookiecutter.project_name }}"
        EMAIL_HOST: "localhost"
        EMAIL_HOST_USER: "emailuser@localhost"
        EMAIL_HOST_PASSWORD: "emailuser_passwd"
        SECRET_KEY: 'secret_key'
        DJANGO_SETTINGS_MODULE: "{{ cookiecutter.project_name }}.settings.dtest"
    script:
        - scripts/wait_for_service.sh
        - make test-coverage-ci
    after_script:
        - make report-coverage-html

staging_build:
    stage: build
    variables:
        DOCKER_HOST: $STAGING_SERVER:2375  # 2375 for non-encrypted
        IMAGE_TAG: "$REGISTRY_URL/$PROJECT_NAME:$CI_BUILD_REF_NAME"
    script:
        - docker version
        - make IMAGE_TAG="$IMAGE_TAG" build-image
        - docker tag $IMAGE_TAG $REGISTRY_URL/$PROJECT_NAME:staging
        - docker push $IMAGE_TAG
        - docker push $REGISTRY_URL/$PROJECT_NAME:staging
    only:
        - develop

release_build:
    stage: build
    variables:
        DOCKER_HOST: $PRODUCTION_SERVER:2376  # 2376 for tls
        IMAGE_TAG: "$REGISTRY_URL/$PROJECT_NAME:$CI_BUILD_TAG"
    script:
        - docker version
        - make IMAGE_TAG="$IMAGE_TAG" build-image
        - docker tag $IMAGE_TAG $REGISTRY_URL/$PROJECT_NAME:latest
        - docker push --all $REGISTRY_URL/$PROJECT_NAME
    only:
        - master

staging_deploy:
    stage: deploy
    variables:
        DOCKER_HOST: $STAGING_SERVER:2375  # 2375 for non-encrypted
    script:
        - docker-compose up -d nginx
    only:
        - develop

production_deploy:
    stage: deploy
    variables:
        DOCKER_HOST: $PRODUCTION_SERVER:2376  # 2376 for tls
    script:
        - docker-compose up -d nginx_production
    only:
        - master
